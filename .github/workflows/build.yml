# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven, DockerHub and ECS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: demo-ecs-cluster 
  ECS_SERVICE: demo-service
  ECS_TASK_DEFINITION: .aws/task-definition.json
  CONTAINER_NAME: test-push-actions

jobs:
  build:
    name: Build Image and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Maven Clean and Build Image
        run: mvn -B -DskipTests clean package org.springframework.boot:spring-boot-maven-plugin:build-image
      
      - name: Set NAME and VERSION
        run: echo "TAG=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
      
      - name: Publish Docker image
        env: 
          DOCKER_IMAGE: '${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO_NAME }}:${{ env.TAG }}'
        run: docker push $DOCKER_IMAGE

  deploy-task:
    needs: [build]
    name: Build ECS Task
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      #- name: Download task definition
      #  run: |
      #    aws ecs describe-task-definition --task-definition test-push-actions \
      #    --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        env: 
          DOCKER_IMAGE: '${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO_NAME }}'
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: test-push-actions
          image: $DOCKER_IMAGE