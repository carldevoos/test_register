# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test - Unit & Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Maven Clean
        run: mvn -B clean package -DskipTests
      - name: Maven Build Image
        run: mvn -B -DskipTests org.springframework.boot:spring-boot-maven-plugin:build-image
      - name: Set name and version
        run: echo "NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)" >> $GITHUB_ENV ; echo "TAG=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
      - name: Publish Docker image
        env: 
          DOCKER_IMAGE: '${{ secrets.DOCKER_USER }}/${{ env.NAME }}:${{ env.TAG }}'
        run: docker push $DOCKER_IMAGE

  #redeploy:
  #  name: Redeploy webhook call
  #  runs-on: ubuntu-latest
  #  needs: [docker]
  #  steps:
  #    - name: Deploy docker container webhook
  #      uses: joelwmale/webhook-action@master
  #      env:
  #        WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL  }}
          #data: "{ 'myField': 'myFieldValue'}"